<?php
// контролер страницы регистрации

require 'models/Users.php';
require 'core/SignUp.php';

/**
 * обработка формы регистрации
 */
if($_SERVER['REQUEST_METHOD'] === 'POST'){// если форма отправлена
//	DBConnect::d($_POST);
//	DBConnect::d($_FILES);

	// проверяем данные
	list($errors, $input) = SignUp::validateForm();
	DBConnect::d($errors);
	DBConnect::d($input);

	// если есть ошибки при заполнении
	if($errors){// показываем форму снова
		require 'views/registration_view.php';
	}else{// если ошибок нет
		// сохраняем данные
		SignUp::processForm($input);
	}

}else{ // если страница загружена впервые
	// показываем форму
	require 'views/registration_view.php';
}

// основы регулярных выражений
// ~, #, / - ограничители регулярного выражения
// ^ - ограничитель начала строки
// $ - ограничитель конца строки
// [0-9] - один символ из заданного диапазона (ОДИН символ в диапазоне от 0 до 9)
// u - флаг, который указывает, что в выражении может исп. кириллица
// i - флаг, сравнение без учета регистра
// [0-9]+ - символ из предыдущего диапазона должен повторяться один или более раз
// [0-9]* - символ из предыдущего диапазона должен повторяться ноль или более раз
// [0-9]{2,8} - символ из предыдущего диапазона должен повторяться от 2 до 8 раз
// [0-9]{2,} - символ из предыдущего диапазона должен повторяться 2 или более раза
// [0-9]{2} - символ из предыдущего диапазона должен повторяться 2 раза
// . - один любой символ
//
//$str = 'test@test.ru';
//
//$regExp = "/^.+@.+\..{2,}$/";
//
//if(preg_match($regExp, $str)){
//	echo 'Строка соответствует';
//}else{
//	echo 'Строка НЕ соответствует';
//}






